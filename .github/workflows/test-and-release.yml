name: test and release

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: install dependencies
        run: npm ci

      - name: lint
        run: npm run lint

      - name: unit tests
        run: npm run test:cov

      - name: e2e tests
        run: npm run test:e2e:cov

      - name: Store unit test coverage report
        uses: actions/cache@v3
        with:
          path: ./coverage
          key: unit-test-coverage-report-${{ github.run_id }}

      - name: Store e2e test coverage report
        uses: actions/cache@v3
        with:
          path: ./coverage-e2e
          key: e2e-test-coverage-report-${{ github.run_id }}

  sonarcloud-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2

      - name: Retrieve unit test coverage report
        uses: actions/cache@v3
        with:
          path: ./coverage
          key: unit-test-coverage-report-${{ github.run_id }}

      - name: Retrieve e2e test coverage report
        uses: actions/cache@v3
        with:
          path: ./coverage-e2e
          key: e2e-test-coverage-report-${{ github.run_id }}

      - uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: sonarcloud-scan
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: install dependencies
        run: npm ci

      - name: generate release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
